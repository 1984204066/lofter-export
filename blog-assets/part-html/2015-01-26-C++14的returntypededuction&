<div class="txtcont">
													
													
													<p> </p> 
<p> https://www.newsmth.net/nForum/#!article/CPlusPlus/374960<br></p> 
<p>若干年前实现了一个 C++ 序列化库，以前一直纠结于一种优化无法（自动）实现：&nbsp;</p> 
<p>struct A { int a1, a2; };&nbsp;</p> 
<p>struct B { int b1, b2; };&nbsp;</p> 
<p>struct C { A ca; B cb; };&nbsp;</p> 
<p>struct D { std::set d; };&nbsp;</p> 
<p>DATA_IO_LOAD_SAVE_E(A, &amp;a1 &amp;a2) // 序列化 A 的 a1, a2 成员，下同&nbsp;</p> 
<p>DATA_IO_LOAD_SAVE_E(B, &amp;b1 &amp;b2)&nbsp;</p> 
<p>DATA_IO_LOAD_SAVE_E(C, &amp;ca &amp;cb)&nbsp;</p> 
<p>DATA_IO_LOAD_SAVE_E(D, &amp;d) &nbsp; &nbsp; &nbsp;// stl 容器也可以序列化&nbsp;</p> 
<p>&nbsp;&nbsp;</p> 
<p>如果使用 NativeDataInput/Output, 只能自动推断出 A, B 可以直接 &nbsp;</p> 
<p>memcpy，无法推断出 C 也可以 memcpy，当然，任何情况下 D 肯定都是&nbsp;</p> 
<p>无法 memcpy 的&nbsp;</p> 
<p>&nbsp;&nbsp;</p> 
<p>现在有了 return type deduction, C memcpy 的问题就解决了&nbsp;</p> 
<p>&nbsp;&nbsp;</p> 
<p>参考链接： https://www.nfabo.cn/p/?p=65&nbsp;</p> 
<p>&nbsp;&nbsp;</p> 
<p><br></p>
													
												</div>
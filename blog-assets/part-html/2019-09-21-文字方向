<div class="txtcont">
													
													
													<p>g++&nbsp;-std=c++0x test.c</p> 
<p><br></p> 
<p>#include &lt;string&gt;<br>#include &lt;codecvt&gt;<br>#include &lt;locale&gt;<br>#include &lt;iostream&gt;<br>#include &lt;stdio.h&gt;<br>#define WIDGTH 16<br>using namespace std;<br><br>// utf8转unicode<br>wstring utf8_to_wstring(const string &amp;str)<br>{<br>&nbsp; wstring_convert&lt;codecvt_utf8&lt;wchar_t&gt;&gt; utf8_cvt;<br>&nbsp; return utf8_cvt.from_bytes(str);<br>}<br><br>// unicode转utf8<br>string wstring_to_utf8(const wstring &amp;str)<br>{<br>&nbsp; wstring_convert&lt;codecvt_utf8&lt;wchar_t&gt;&gt; utf8_cvt;<br>&nbsp; return utf8_cvt.to_bytes(str);<br>}<br>static wstring wstart = utf8_to_wstring(u8"←");<br>static wstring LR = utf8_to_wstring(u8"\n");<br>static wstring brackets = utf8_to_wstring("〈〉《》「」『』【】〔〕（）()");<br><br>int main(int argc, char **argv)&nbsp;<br>{<br>&nbsp; int nwords = 0;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;/* wcout.imbue(locale("zh_CN.GBK"));&nbsp;*/<br>&nbsp; int has_num = 0;<br>&nbsp; wstring wline = wstart;<br>&nbsp;&nbsp;<br>&nbsp; auto add_num =&nbsp;[&amp;](wstring&amp; wsequence)&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp; if (has_num)&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nwords += has_num, has_num = 0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wline = wsequence + wline, wsequence.clear();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;};<br>&nbsp;&nbsp;<br>&nbsp; wstring wnum;<br>&nbsp; wstring wrev;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;//string str = u8"3+5 = 8";<br>&nbsp; string str = u8"如：（3+5，6+8）的值是14；";<br>&nbsp; cout &lt;&lt;&nbsp;"请输入：";<br>&nbsp; while (cin&nbsp;&gt;&gt; str)<br>&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp; wstring w1 = utf8_to_wstring(str);&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;(w1.crbegin(), w1.crend());<br>&nbsp;&nbsp;&nbsp; for (auto ch : w1)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; auto found = brackets.find(ch)&nbsp;!= wstring::npos;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (found)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ch ^= 1;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (iswalnum(ch))&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wnum += ch, has_num = 1;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//cout &lt;&lt; has_num;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; continue;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; add_num(wnum);<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wline.insert(wline.begin(), ch);&nbsp;// reverse order<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nwords += 1;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (nwords&nbsp;&gt;= WIDGTH)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wrev += wline + LR;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wline = wstart;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nwords = 0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;}<br>&nbsp; if (nwords&nbsp;|| has_num)&nbsp;<br>&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp; add_num(wnum);<br>&nbsp;&nbsp;&nbsp; wrev += wline;<br>&nbsp;&nbsp;}<br>&nbsp; str = wstring_to_utf8(wrev);<br>&nbsp; cout &lt;&lt; str &lt;&lt; endl;<br>&nbsp;&nbsp;<br>&nbsp; return 0;&nbsp;<br>}<br></p> 
<br> 
<p>python3 版本</p> 
<p>#!/usr/bin/python3<br>#&nbsp;-*- coding: utf-8 -*-<br>import sys<br>brackets =&nbsp;"〈〉《》「」『』【】〔〕（）()"<br>Widgth = 16<br>wrev =&nbsp;""<br>def isAlnum(word)&nbsp;:<br>&nbsp;&nbsp;&nbsp; try:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return word.encode('utf-8').isalnum()<br>&nbsp;&nbsp;&nbsp; except UnicodeEncodeError:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return False<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>try:<br>&nbsp;&nbsp;&nbsp; wnum =&nbsp;""<br>&nbsp;&nbsp;&nbsp; has_num = 0<br>&nbsp;&nbsp;&nbsp; wstart =&nbsp;"←"<br>&nbsp;&nbsp;&nbsp; wline = wstart<br>&nbsp;&nbsp;&nbsp; nwords = 0<br>&nbsp;&nbsp;&nbsp; def add_num(wsequence)&nbsp;:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; global has_num<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if has_num :<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; global nwords<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nwords += has_num<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; has_num = 0<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; global wline<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wline = wsequence + wline<br><br>&nbsp;&nbsp;&nbsp; while True :<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; str = input("请输入：")<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# print("你输入的内容是:&nbsp;", str, type(str))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for word in str:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i = brackets.find(word)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (i&nbsp;!=&nbsp;-1):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i ^= 1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; word = brackets[i:i+1]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if isAlnum(word):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wnum += word<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; has_num = 1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; continue<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; add_num(wnum)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wnum =&nbsp;""<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wline = word + wline<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nwords += 1<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (nwords&nbsp;&gt;= Widgth):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wrev = wrev + wline +&nbsp;"\n"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wline = wstart<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nwords = 0<br><br>except Exception as err:<br>&nbsp;&nbsp;&nbsp; print(err)<br><br>if nwords or has_num :<br>&nbsp;&nbsp;&nbsp; add_num(wnum)<br>&nbsp;&nbsp;&nbsp; wrev += wline<br><br>print(wrev)<br>sys.exit(0)<br><br><br></p>
													
												</div>
<div class="txtcont">
													
													
													<p><a rel="nofollow" href="https://www.cnblogs.com/yjie/p/4059145.html" target="_blank">一些有用的 Emacs 配置（窗口快速切换、一键透明效果、任意位置删除整行等</a></p> 
<p>设置一次跳跃 n 行的快捷键</p> 
<p><br></p> 
<p><a rel="nofollow" href="https://www.cnblogs.com/instinct-em/p/10628709.html" target="_blank">emacs的新配置</a><br></p> 
<p>;;关闭自动备份(setq make-backup-files nil)(setq auto-save-default nil)<br></p> 
<p><a rel="nofollow" href="https://blog.csdn.net/fhq1989312/article/details/7314354" target="_blank">我的emacs配置</a><br><a rel="nofollow" href="https://blog.csdn.net/wangjunsheng/article/details/81097838" target="_blank">emacs 常用用法</a>&nbsp;快捷键等</p> 
<p>很干脆的杀buffer,不想每次回答个 yes or no 之类的</p> 
<p>(global-set-key&nbsp;"\C-xk"&nbsp;#'(lambda&nbsp;()&nbsp;(interactive)&nbsp;(kill-buffer&nbsp;(current-buffer))))</p> 
<p>.emacs.d/init.el</p> 
<blockquote> 
 <p>(cond<br>&nbsp;((eq system-type 'gnu/linux)&nbsp;; linux <br>&nbsp;&nbsp;(load "~/.emacs"))<br>&nbsp;((eq system-type 'windows-nt)&nbsp;; Microsoft Windows <br>&nbsp;&nbsp;(load "~/../../.emacs")))<br><br>(custom-set-variables<br>&nbsp;;; custom-set-variables was added by Custom.<br>&nbsp;;; If you edit it by hand, you could mess it up, so be careful.<br>&nbsp;;; Your init file should contain only one such instance.<br>&nbsp;;; If there is more than one, they won't work right.<br>&nbsp;'(package-selected-packages<br>&nbsp;&nbsp;&nbsp;(quote<br>&nbsp;&nbsp;&nbsp;&nbsp;(helm-projectile ggtags highlight-parentheses autopair window-numbering window-number windresize color-theme-modern use-package helm))))<br>(custom-set-faces<br>&nbsp;;; custom-set-faces was added by Custom.<br>&nbsp;;; If you edit it by hand, you could mess it up, so be careful.<br>&nbsp;;; Your init file should contain only one such instance.<br>&nbsp;;; If there is more than one, they won't work right.<br>&nbsp;)<br><br><br></p> 
</blockquote> 
<p>~/.emacs</p> 
<blockquote> 
 <p><br>(require 'package)<br>;(setq package-archives '(("gnu"&nbsp;.&nbsp;"https://elpa.gnu.org/packages/")<br>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("marmalade"&nbsp;.&nbsp;"https://marmalade-repo.org/packages/")<br>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("melpa"&nbsp;.&nbsp;"https://melpa.milkbox.net/packages/")))<br><br>(setq package-enable-at-startup nil)<br>(setq package-archives '(("gnu"&nbsp;&nbsp;&nbsp;.&nbsp;"https://mirrors.tuna.tsinghua.edu.cn/elpa/gnu/")&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;("melpa"&nbsp;.&nbsp;"https://mirrors.tuna.tsinghua.edu.cn/elpa/melpa/")))<br>(package-initialize)<br>(when (not package-archive-contents)<br>&nbsp;&nbsp;(package-refresh-contents)<br>&nbsp;&nbsp;(package-install 'use-package))&nbsp;;;保证use-package&nbsp;能用<br>(require 'use-package)<br><br>;;很干脆的杀buffer,不想每次回答个 yes or no 之类的<br>(global-set-key (kbd&nbsp;"M-k")&nbsp;#'(lambda&nbsp;()&nbsp;(interactive)&nbsp;(kill-buffer&nbsp;(current-buffer))))&nbsp;;;&nbsp;#'不要也可以。<br>;(global-set-key "\C-xk"&nbsp;#'(lambda&nbsp;()&nbsp;(interactive)&nbsp;(kill-buffer&nbsp;(current-buffer))))<br>;;&nbsp;不要总是没完没了的问yes or no,&nbsp;为什么不能用y/n<br>(fset 'yes-or-no-p'y-or-n-p)<br><br>(setq default-buffer-file-coding-system 'utf-8)<br>(prefer-coding-system 'utf-8)&nbsp;<br>;;不显示GNU emacs启动界面<br>(setq inhibit-startup-message t)&nbsp;<br>;;菜单栏设置<br>(menu-bar-mode 1)&nbsp;;;显示菜单栏<br>;;工具栏设置<br>;(tool-bar-mode -1)&nbsp;;;不显示工具栏&nbsp;工具栏太丑<br>;;滚动条设置<br>;(scroll-bar-mode -1)&nbsp;;;不显示滚动条&nbsp;太丑<br>(setq scroll-step 1);;每次一行一行向下翻<br>(setq-default cursor-type 'bar)&nbsp;;;光标设为竖线<br><br>(setq make-backup-files nil)&nbsp;;;关闭自动备份<br>;;(global-unset-key (kbd&nbsp;"M-o"))<br>;;(global-set-key (kbd&nbsp;"M-o")&nbsp;'find-file)<br>;;(global-set-key (kbd&nbsp;"M-b")&nbsp;'switch-to-buffer)<br>;;(global-set-key (kbd&nbsp;"C-s")&nbsp;'isearch-forward)<br>;;(global-set-key (kbd&nbsp;"C-w")&nbsp;'kill-region)<br>(global-set-key (kbd&nbsp;"M-r")&nbsp;'replace-string)<br>(global-set-key (kbd&nbsp;"M-q")&nbsp;'query-replace-string)<br>(global-set-key (kbd&nbsp;"M-g")&nbsp;'goto-line)<br>(global-set-key (kbd&nbsp;"M-s")&nbsp;'save-buffer)<br>(global-set-key (kbd&nbsp;"M-v")&nbsp;'yank)<br>(global-set-key (kbd&nbsp;"C-2")&nbsp;'set-mark-command)<br>(global-set-key (kbd&nbsp;"C-j")&nbsp;'join-line)<br>(global-set-key (kbd&nbsp;"C-z")&nbsp;'undo)<br>(global-set-key [f6]&nbsp;'other-window)<br>;;(global-set-key [C-f7]&nbsp;'toggle-frame-maximized)<br>(global-set-key [f7]&nbsp;'delete-other-windows)<br>;;&nbsp;(global-set-key (kbd&nbsp;"C-&lt;up&gt;")&nbsp;(lambda&nbsp;()&nbsp;(interactive)&nbsp;(previous-line 5)))<br>;;&nbsp;(global-set-key (kbd&nbsp;"C-&lt;down&gt;")&nbsp;(lambda&nbsp;()&nbsp;(interactive)&nbsp;(next-line 5)))<br>(global-set-key (kbd&nbsp;"&lt;C-M-left&gt;")&nbsp;(lambda&nbsp;()&nbsp;(interactive)&nbsp;(insert&nbsp;"←")))<br>(global-set-key (kbd&nbsp;"&lt;C-M-right&gt;")&nbsp;(lambda&nbsp;()&nbsp;(interactive)&nbsp;(insert&nbsp;"→")))<br>;; https://github.com/emacs-jp/replace-colorthemes/<br>(use-package color-theme-modern<br>&nbsp;&nbsp;:ensure t<br>&nbsp;&nbsp;:demand<br>&nbsp;&nbsp;:init<br>&nbsp;&nbsp;(setq theme-name 'desert&nbsp;)&nbsp;&nbsp;;;&nbsp;'comidia&nbsp;&nbsp;,&nbsp;'clarity&nbsp;,&nbsp;'desert<br>&nbsp;&nbsp;:config<br>&nbsp;&nbsp;(load-theme theme-name t t)<br>&nbsp;&nbsp;(enable-theme theme-name))<br><br>(use-package doom-themes<br>&nbsp;&nbsp;:disabled t<br>&nbsp;&nbsp;:init<br>&nbsp;&nbsp;(setq doom-themes-enable-bold t<br>&nbsp;&nbsp;&nbsp; doom-themes-enable-italic t)<br>&nbsp;&nbsp;:config<br>&nbsp;&nbsp;(load-theme 'doom-one t))<br><br>(use-package doom-modeline<br>&nbsp;&nbsp;:ensure t<br>&nbsp;&nbsp;:hook (after-init&nbsp;. doom-modeline-mode))<br><br>;;功能稍微好用于NumberedWindows https://nschum.de/src/emacs/window-numbering-mode/<br>(use-package window-numbering :defer 1<br>&nbsp;&nbsp;:config<br>&nbsp;&nbsp;(window-numbering-mode 1))&nbsp;;;采用M-x进行窗口导航切换 M-0切换到激活的minibuffer<br><br>(use-package windresize :defer 2<br>&nbsp;&nbsp;:config<br>&nbsp;&nbsp;(global-set-key (kbd&nbsp;"&lt;C-M-S-left&gt;")&nbsp;'shrink-window-horizontally)<br>&nbsp;&nbsp;(global-set-key (kbd&nbsp;"&lt;C-M-S-right&gt;")&nbsp;'enlarge-window-horizontally)<br>&nbsp;&nbsp;(global-set-key (kbd&nbsp;"&lt;C-M-S-down&gt;")&nbsp;'shrink-window)<br>&nbsp;&nbsp;(global-set-key (kbd&nbsp;"&lt;C-M-S-up&gt;")&nbsp;'enlarge-window))<br><br>(use-package helm &nbsp;;; helm保证要安装上的，否则M-x没法用。<br>&nbsp;&nbsp;:ensure t<br>&nbsp;&nbsp;:bind (<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("M-x". helm-M-x)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("M-o". helm-find-files)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("M-b"&nbsp;. helm-buffers-list)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;([M-f7]&nbsp;. maximize-window)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;("M-f"&nbsp;. helm-recentf)))<br><br>(use-package projectile<br>&nbsp;&nbsp;:ensure t<br>&nbsp;&nbsp;:bind-keymap ("\C-p"&nbsp;. projectile-command-map)&nbsp;&nbsp;;;default is?.<br>&nbsp;&nbsp;:init (setq projectile-use-git-grep t)<br>&nbsp;&nbsp;:config<br>&nbsp;&nbsp;(projectile-global-mode)<br>&nbsp;&nbsp;;;&nbsp;(projectile-mode t)<br>&nbsp;&nbsp;(setq ;projectile-cache-file&nbsp;(concat mage-cache-dir "projectile.cache")&nbsp;<br>&nbsp;&nbsp;&nbsp; projectile-enable-caching t<br>&nbsp;&nbsp;&nbsp; projectile-indexing-method 'alien<br>&nbsp;&nbsp;&nbsp;&nbsp;;projectile-known-projects-file (concat mage-cache-dir "projectile.projects")<br>&nbsp;&nbsp;&nbsp; projectile-require-project-root t<br>&nbsp;&nbsp;&nbsp; projectile-globally-ignored-file-suffixes '(".elc"&nbsp;".pyc"&nbsp;".o"&nbsp;".Po")<br>&nbsp;&nbsp;&nbsp;&nbsp;;;projectile-globally-ignored-directories '(".deps")<br>&nbsp;&nbsp;&nbsp; projectile-completion-system 'helm&nbsp;;;&nbsp;经常用ivy， https://www.jianshu.com/p/250301ebb7f9<br>&nbsp;&nbsp;&nbsp;&nbsp;)<br>&nbsp;&nbsp;(append '(".deps") projectile-globally-ignored-directories)<br>&nbsp;&nbsp;(use-package helm-projectile :ensure t))<br><br>(electric-indent-mode t)&nbsp;;;自动缩进<br>(show-paren-mode t)&nbsp;;;显示匹配的括号<br>;; https://www.emacswiki.org/emacs/ElectricPair<br>;; A better solution may be skeleton-insert-pair-maybe (see AutoPairs).<br>(electric-pair-mode +1)&nbsp;&nbsp;;;(electric-pair-local-mode) Toggle ‘electric-pair-mode’ only in this buffer.<br>(global-set-key (kbd&nbsp;"C-&lt;SPC&gt;")&nbsp;'forward-char)<br><br>(use-package smartparens<br>&nbsp;&nbsp;:disabled t<br>&nbsp;&nbsp;:init (smartparens-global-mode t)<br>&nbsp;&nbsp;:config<br>&nbsp;&nbsp;(sp-local-pair 'emacs-lisp-mode&nbsp;"'" nil :actions nil)&nbsp;;;&nbsp;写lisp的时候不希望成对补全<br>&nbsp;&nbsp;(sp-local-pair 'lisp-interaction-mode&nbsp;"'" nil :actions nil))<br><br>;;智能括号自动补全 https://www.emacswiki.org/emacs/AutoPairs &nbsp;&nbsp;&nbsp;;;(require&nbsp;'auto-pair+)<br>(use-package autopair<br>&nbsp;&nbsp;:disabled t<br>&nbsp;&nbsp;:config<br>&nbsp;&nbsp;(autopair-global-mode 1)&nbsp;;;&nbsp;全局启用智能补全括号<br>&nbsp;&nbsp;(global-set-key (kbd&nbsp;"C-&lt;SPC&gt;")&nbsp;'forward-char))<br><br>;;智能括号匹配高亮 https://www.emacswiki.org/emacs/HighlightParentheses<br>(use-package highlight-parentheses<br>&nbsp;&nbsp;:disabled t<br>&nbsp;&nbsp;:config<br>&nbsp;&nbsp;;;使autopair模式和highlight-parentheses集成交互使用<br>&nbsp;&nbsp;(add-hook 'highlight-parentheses-mode-hook<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'(lambda ()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(setq autopair-handle-action-fns<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(append<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(if autopair-handle-action-fns<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; autopair-handle-action-fns<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'(autopair-default-handle-action))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'((lambda (action pair pos-before)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(hl-paren-color-update)))))))<br>&nbsp;&nbsp;(global-highlight-parentheses-mode t)<br>&nbsp;&nbsp;(setq show-paren-style 'parentheses))&nbsp;&nbsp;&nbsp;&nbsp;;括号匹配显示但不是烦人的跳到另一个括号。<br><br>;; https://tuhdo.github.io/c-ide.html<br>(use-package ggtags<br>&nbsp;&nbsp;:ensure t<br>&nbsp;&nbsp;:bind (:map ggtags-mode-map<br>&nbsp;&nbsp;("C-c g s"&nbsp;.&nbsp;'ggtags-find-other-symbol)<br>&nbsp;&nbsp;("C-c g h"&nbsp;.&nbsp;'ggtags-view-tag-history)<br>&nbsp;&nbsp;("C-c g r"&nbsp;.&nbsp;'ggtags-find-reference)<br>&nbsp;&nbsp;("C-c g f"&nbsp;.&nbsp;'ggtags-find-file)<br>&nbsp;&nbsp;("C-c g c"&nbsp;.&nbsp;'ggtags-create-tags)<br>&nbsp;&nbsp;("C-c g u"&nbsp;.&nbsp;'ggtags-update-tags))<br>&nbsp;&nbsp;:config &nbsp;;;(ggtags-mode 1)&nbsp;好像没啥用,&nbsp;必须加到 c-mode-common-hook里面<br>&nbsp;&nbsp;(add-hook 'c-mode-common-hook<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(lambda ()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(when (derived-mode-p&nbsp;'c-mode&nbsp;'c++-mode&nbsp;'java-mode&nbsp;'asm-mode)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(ggtags-mode 1)))))<br><br>;; https://www.cnblogs.com/lance-ehf/p/4449410.html<br>;;;; CC-mode配置&nbsp; https://cc-mode.sourceforge.net/<br>(require 'cc-mode)<br>(c-set-offset 'inline-open 0)<br>(c-set-offset 'friend&nbsp;'-)<br>(c-set-offset 'substatement-open 0)<br>;;;;我的C/C++语言编辑策略<br><br>(defun my-c-mode-common-hook()<br>&nbsp;&nbsp;(setq tab-width 4 indent-tabs-mode nil)<br>&nbsp;&nbsp;;;; hungry-delete and auto-newline<br>&nbsp;&nbsp;(c-toggle-auto-hungry-state 1)<br>&nbsp;&nbsp;;;按键定义<br>&nbsp;&nbsp;(define-key c-mode-base-map [(control&nbsp;\`)]&nbsp;'hs-toggle-hiding)<br>&nbsp;&nbsp;(define-key c-mode-base-map [(return)]&nbsp;'newline-and-indent)<br>&nbsp;&nbsp;(define-key c-mode-base-map [(C-f7)]&nbsp;'compile)<br>&nbsp;&nbsp;(define-key c-mode-base-map [(meta&nbsp;\`)]&nbsp;'c-indent-command)<br>;;&nbsp;&nbsp;(define-key c-mode-base-map [(tab)]&nbsp;'hippie-expand)<br>&nbsp;;&nbsp;(define-key c-mode-base-map [(tab)]&nbsp;'my-indent-or-complete)<br>&nbsp;;&nbsp;(define-key c-mode-base-map [(meta&nbsp;?/)]&nbsp;'semantic-ia-complete-symbol-menu)<br>&nbsp;&nbsp;;;预处理设置<br>&nbsp;&nbsp;(setq c-macro-shrink-window-flag t)<br>&nbsp;&nbsp;(setq c-macro-preprocessor "cpp")<br>&nbsp;&nbsp;(setq c-macro-cppflags "&nbsp;")<br>&nbsp;&nbsp;(setq c-macro-prompt-flag t)<br>&nbsp;&nbsp;(setq hs-minor-mode t)<br>&nbsp;&nbsp;(setq abbrev-mode t)<br>;;&nbsp;&nbsp;(ggtags-mode 1)<br>)<br>(add-hook 'c-mode-common-hook&nbsp;'my-c-mode-common-hook)<br><br>;;;;我的C++语言编辑策略<br>(defun my-c++-mode-hook()<br>&nbsp;&nbsp;(setq tab-width 4 indent-tabs-mode nil)<br>&nbsp;&nbsp;(c-set-style "stroustrup")<br>;;&nbsp;&nbsp;(define-key c++-mode-map [f3]&nbsp;'replace-regexp)<br>)<br><br><br></p> 
</blockquote>
													
												</div>
<div class="txtcont">
													
													
													<p>1.配置dnsmasq(dns, dhcp,tftp)<br></p> 
<p> 2.配置ftp</p> 
<p>似乎直接用grub2也可以？</p> 
<p>grub2-mkimage &nbsp;-O i386-pc -d&nbsp;&nbsp;/usr/lib/grub/i386-pc/&nbsp;-c first.cfg -p&nbsp;'(pxe)/boot/grub'&nbsp;-o i386-pc-core.img -v echo biosdisk blocklist newc cpio fat iso9660 part_msdos ext2 ntfs loopback reboot halt <br></p> 
<p>设置prefix=(tftp,10.9.9.1)/boot/grub 没有试过。</p> 
<p> cat /usr/lib/grub/i386-pc/pxeboot.img i386-pc-core.img &gt; grub2pxe.0</p> 
<p><br></p> 
<p>boot放置grub2需要的stage2文件。</p> 
<p> find boot | cpio -o&nbsp;-H newc &gt; winly.pkg<br></p> 
<p>#cat first.cfg</p> 
<p>loopback winly /winly.pkg&nbsp;&nbsp;##指令启动的第一时间，首先回放winly.pkg到虚拟的winly磁盘</p> 
<p>set prefix=(winly)/boot/grub &nbsp;##指定启动模块的位置到这个虚拟winly磁盘的/boot/grub</p> 
<p>set pager=1 &nbsp;##设定手动翻页</p> 
<p>这里root应该设成(tftp,10.9.9.1)&nbsp;?</p> 
<p><br> 3.使用syslinux<br>&nbsp;<br> https://docs.fedoraproject.org/en-US/Fedora/26/html/Installation_Guide/pxe-bootloader.html<br> Create a boot menu for BIOS clients at /var/lib/tftpboot/pxelinux.cfg/default.<br>&nbsp;<br> default vesamenu.c32<br> prompt 1<br> timeout 600<br>&nbsp;<br> label linux<br> menu label ^Install Fedora 26 64-bit<br> menu default<br> kernel f26/vmlinuz<br> append initrd=f26/initrd.img inst.stage2=https://download.fedoraproject.org/pub/fedora/linux/releases/26/Server/x86_64/os/ ip=dhcp<br>&nbsp;<br> label server<br> menu label ^Install Fedora 26 ( Minimal Image )<br> menu default<br> kernel f26/vmlinuz<br> append initrd=f26/initrd.img inst.stage2=https://download.fedoraproject.org/pub/fedora/linux/releases/26/Server/x86_64/os/ ip=dhcp ks=https://example.com/fedora/kickstarts/minimal.ks<br>&nbsp;<br> label rescue<br> menu label ^Rescue installed system<br> kernel f26/vmlinuz<br> append initrd=f26initrd.img ip=dhcp root=live:https://download.fedoraproject.org/pub/fedora/linux/releases/26/Server/x86_64/os/LiveOS/squashfs.img rescue<br>&nbsp;<br> menu separator # insert an empty line<br>&nbsp;<br> label local<br> menu label Boot from ^local drive<br> localboot 0xffff<br>&nbsp;<br> menu separator # insert an empty line<br>&nbsp;<br> label returntomain<br>&nbsp;&nbsp; menu label Return to ^main menu<br>&nbsp;&nbsp; menu exit<br>&nbsp;<br> menu end<br></p> 
<p><br></p> 
<p>4. pxe + UEFI 使用shim。</p> 
<p>https://docs.fedoraproject.org/en-US/Fedora/26/html/Installation_Guide/pxe-bootloader.html</p> 
<p>cp shim.efi, grubx64.efi -&gt;&nbsp;/tftpboot/</p> 
<p>5.&nbsp;让x64&nbsp;+UEFI&nbsp;的机器使用shim</p> 
<p>主要是这个</p> 
<p>dhcp-match=set:efi-x86_64,option:client-arch,7</p> 
<p>dhcp-match=set:efi-x86_64,option:client-arch,9</p> 
<p>dhcp-match=set:efi-x86,option:client-arch,6</p> 
<p>dhcp-match=set:bios,option:client-arch,0</p> 
<p><br></p> 
<p>dhcp-boot=tag:efi-x86_64,shim.efi</p> 
<p>dhcp-boot=tag:efi-x86,"efi32/syslinux.efi"</p> 
<p>dhcp-boot=tag:bios,pxelinux.0</p> 
<p><br></p> 
<p><br></p> 
<p> cat /etc/dnsmasq.conf<br></p> 
<p># Configuration file for dnsmasq.</p> 
<p>#</p> 
<p># Format is one option per line, legal options are the same</p> 
<p># as the long options legal on the command line. See</p> 
<p>#&nbsp;"/usr/sbin/dnsmasq --help" or "man 8 dnsmasq" for details.</p> 
<p><br></p> 
<p># Listen on this specific port instead of the standard DNS port</p> 
<p>#&nbsp;(53). Setting this to zero completely disables DNS function,</p> 
<p># leaving only DHCP and/or TFTP.</p> 
<p>#port=5353</p> 
<p><br></p> 
<p># The following two options make you a better netizen, since they</p> 
<p># tell dnsmasq to filter out queries which the public DNS cannot</p> 
<p># answer, and which load the servers (especially the root servers)</p> 
<p># unnecessarily. If you have a dial-on-demand link they also stop</p> 
<p># these requests from bringing up the link unnecessarily.</p> 
<p><br></p> 
<p># Never forward plain names (without a dot or domain part)</p> 
<p>#domain-needed</p> 
<p># Never forward addresses in the non-routed address spaces.</p> 
<p>#bogus-priv</p> 
<p><br></p> 
<p># Uncomment these to enable DNSSEC validation and caching:</p> 
<p>#&nbsp;(Requires dnsmasq to be built with DNSSEC option.)</p> 
<p>#conf-file=/usr/share/dnsmasq/trust-anchors.conf</p> 
<p>#dnssec</p> 
<p><br></p> 
<p># Replies which are not DNSSEC signed may be legitimate, because the domain</p> 
<p># is unsigned, or may be forgeries. Setting this option tells dnsmasq to</p> 
<p># check that an unsigned reply is OK, by finding a secure proof that a DS </p> 
<p># record somewhere between the root and the domain does not exist.&nbsp;</p> 
<p># The cost of setting this is that even queries in unsigned domains will need</p> 
<p># one or more extra DNS queries to verify.</p> 
<p>#dnssec-check-unsigned</p> 
<p><br></p> 
<p># Uncomment this to filter useless windows-originated DNS requests</p> 
<p># which can trigger dial-on-demand links needlessly.</p> 
<p># Note that (amongst other things) this blocks all SRV requests,</p> 
<p># so don't use it if you use eg Kerberos, SIP, XMMP or Google-talk.</p> 
<p># This option only affects forwarding, SRV records originating for</p> 
<p># dnsmasq (via srv-host= lines) are not suppressed by it.</p> 
<p>#filterwin2k</p> 
<p><br></p> 
<p># Change this line if you want dns to get its upstream servers from</p> 
<p># somewhere other that /etc/resolv.conf</p> 
<p>#resolv-file=</p> 
<p><br></p> 
<p># By&nbsp; default,&nbsp; dnsmasq&nbsp; will&nbsp; send queries to any of the upstream</p> 
<p># servers it knows about and tries to favour servers to are&nbsp; known</p> 
<p># to&nbsp; be&nbsp; up.&nbsp; Uncommenting this forces dnsmasq to try each query</p> 
<p># with&nbsp; each&nbsp; server&nbsp; strictly&nbsp; in&nbsp; the&nbsp; order&nbsp; they &nbsp; appear &nbsp; in</p> 
<p>#&nbsp;/etc/resolv.conf</p> 
<p>#strict-order</p> 
<p><br></p> 
<p># If you don't want dnsmasq to read /etc/resolv.conf or any other</p> 
<p># file, getting its servers from this file instead (see below), then</p> 
<p># uncomment this.</p> 
<p>#no-resolv</p> 
<p><br></p> 
<p># If you don't want dnsmasq to poll /etc/resolv.conf or other resolv</p> 
<p># files for changes and re-read them then uncomment this.</p> 
<p>#no-poll</p> 
<p><br></p> 
<p># Add other name servers here, with domain specs if they are for</p> 
<p># non-public domains.</p> 
<p>#server=/localnet/192.168.0.1</p> 
<p>server=127.0.0.1</p> 
<p>server=114.114.114.114</p> 
<p>server=8.8.8.8</p> 
<p><br></p> 
<p># Example of routing PTR queries to nameservers: this will send all</p> 
<p># address-&gt;name queries for 192.168.3/24 to nameserver 10.1.2.3</p> 
<p>#server=/3.168.192.in-addr.arpa/10.1.2.3</p> 
<p><br></p> 
<p># Add local-only domains here, queries in these domains are answered</p> 
<p># from /etc/hosts or DHCP only.</p> 
<p>#local=/localnet/</p> 
<p><br></p> 
<p># Add domains which you want to force to an IP address here.</p> 
<p># The example below send any host in double-click.net to a local</p> 
<p># web-server.</p> 
<p>#address=/double-click.net/127.0.0.1</p> 
<p>address=/bogon/127.0.0.1</p> 
<p>#address=/mt65xx/10.9.9.1</p> 
<p><br></p> 
<p>#&nbsp;--address (and&nbsp;--server) work with IPv6 addresses too.</p> 
<p>#address=/www.thekelleys.org.uk/fe80::20d:60ff:fe36:f83</p> 
<p><br></p> 
<p># Add the IPs of all queries to yahoo.com, google.com, and their</p> 
<p># subdomains to the vpn and search ipsets:</p> 
<p>#ipset=/yahoo.com/google.com/vpn,search</p> 
<p><br></p> 
<p># You can control how dnsmasq talks to a server: this forces</p> 
<p># queries to 10.1.2.3 to be routed via eth1</p> 
<p># server=10.1.2.3@eth1</p> 
<p><br></p> 
<p># and this sets the source (ie local) address used to talk to</p> 
<p># 10.1.2.3 to 192.168.1.1 port 55 (there must be a interface with that</p> 
<p># IP on the machine, obviously).</p> 
<p># server=10.1.2.3@192.168.1.1#55</p> 
<p><br></p> 
<p># If you want dnsmasq to change uid and gid to something other</p> 
<p># than the default, edit the following lines.</p> 
<p>#user=</p> 
<p>#group=</p> 
<p><br></p> 
<p># If you want dnsmasq to listen for DHCP and DNS requests only on</p> 
<p># specified interfaces (and the loopback) give the name of the</p> 
<p># interface (eg eth0) here.</p> 
<p># Repeat the line for more than one interface.</p> 
<p>#interface=</p> 
<p># Or you can specify which interface _not_ to listen on</p> 
<p>except-interface=wlp2s2</p> 
<p># Or which to listen on by address (remember to include 127.0.0.1 if</p> 
<p># you use this.)</p> 
<p>#listen-address=</p> 
<p># If you want dnsmasq to provide only DNS service on an interface,</p> 
<p># configure it as shown above, and then use the following line to</p> 
<p># disable DHCP and TFTP on it.</p> 
<p>#no-dhcp-interface=</p> 
<p><br></p> 
<p># On systems which support it, dnsmasq binds the wildcard address,</p> 
<p># even when it is listening on only some interfaces. It then discards</p> 
<p># requests that it shouldn't reply to. This has the advantage of</p> 
<p># working even when interfaces come and go and change address. If you</p> 
<p># want dnsmasq to really bind only the interfaces it is listening on,</p> 
<p># uncomment this option. About the only time you may need this is when</p> 
<p># running another nameserver on the same machine.</p> 
<p>#bind-interfaces</p> 
<p><br></p> 
<p># If you don't want dnsmasq to read /etc/hosts, uncomment the</p> 
<p># following line.</p> 
<p>#no-hosts</p> 
<p># or if you want it to read another file, as well as /etc/hosts, use</p> 
<p># this.</p> 
<p>#addn-hosts=/etc/banner_add_hosts</p> 
<p><br></p> 
<p># Set this (and domain: see below) if you want to have a domain</p> 
<p># automatically added to simple names in a hosts-file.</p> 
<p>#expand-hosts</p> 
<p><br></p> 
<p># Set the domain for dnsmasq. this is optional, but if it is set, it</p> 
<p># does the following things.</p> 
<p># 1) Allows DHCP hosts to have fully qualified domain names, as long</p> 
<p>#&nbsp;&nbsp;&nbsp;&nbsp; as the domain part matches this setting.</p> 
<p># 2) Sets the "domain" DHCP option thereby potentially setting the</p> 
<p>#&nbsp;&nbsp;&nbsp; domain of all systems configured by DHCP</p> 
<p># 3) Provides the domain part for "expand-hosts"</p> 
<p>#domain=thekelleys.org.uk</p> 
<p><br></p> 
<p># Set a different domain for a particular subnet</p> 
<p>#domain=wireless.thekelleys.org.uk,192.168.2.0/24</p> 
<p><br></p> 
<p># Same idea, but range rather then subnet</p> 
<p>#domain=reserved.thekelleys.org.uk,192.68.3.100,192.168.3.200</p> 
<p><br></p> 
<p># Uncomment this to enable the integrated DHCP server, you need</p> 
<p># to supply the range of addresses available for lease and optionally</p> 
<p># a lease time. If you have more than one network, you will need to</p> 
<p># repeat this for each network on which you want to supply DHCP</p> 
<p># service.</p> 
<p>#dhcp-range=192.168.0.50,192.168.0.150,12h</p> 
<p>dhcp-range=10.9.9.10,10.9.9.150,12h</p> 
<p><br></p> 
<p># This is an example of a DHCP range where the netmask is given. This</p> 
<p># is needed for networks we reach the dnsmasq DHCP server via a relay</p> 
<p># agent. If you don't know what a DHCP relay agent is, you probably</p> 
<p># don't need to worry about this.</p> 
<p>#dhcp-range=192.168.0.50,192.168.0.150,255.255.255.0,12h</p> 
<p><br></p> 
<p># This is an example of a DHCP range which sets a tag, so that</p> 
<p># some DHCP options may be set only for this network.</p> 
<p>#dhcp-range=set:red,192.168.0.50,192.168.0.150</p> 
<p><br></p> 
<p># Use this DHCP range only when the tag "green" is set.</p> 
<p>#dhcp-range=tag:green,192.168.0.50,192.168.0.150,12h</p> 
<p><br></p> 
<p># Specify a subnet which can't be used for dynamic address allocation,</p> 
<p># is available for hosts with matching --dhcp-host lines. Note that</p> 
<p># dhcp-host declarations will be ignored unless there is a dhcp-range</p> 
<p># of some type for the subnet in question.</p> 
<p># In this case the netmask is implied (it comes from the network</p> 
<p># configuration on the machine running dnsmasq) it is possible to give</p> 
<p># an explicit netmask instead.</p> 
<p>#dhcp-range=192.168.0.0,static</p> 
<p><br></p> 
<p># Enable DHCPv6. Note that the prefix-length does not need to be specified</p> 
<p># and defaults to 64 if missing/</p> 
<p>#dhcp-range=1234::2, 1234::500, 64, 12h</p> 
<p><br></p> 
<p># Do Router Advertisements, BUT NOT DHCP for this subnet.</p> 
<p>#dhcp-range=1234::, ra-only </p> 
<p><br></p> 
<p># Do Router Advertisements, BUT NOT DHCP for this subnet, also try and</p> 
<p># add names to the DNS for the IPv6 address of SLAAC-configured dual-stack </p> 
<p># hosts. Use the DHCPv4 lease to derive the name, network segment and </p> 
<p># MAC address and assume that the host will also have an</p> 
<p># IPv6 address calculated using the SLAAC alogrithm.</p> 
<p>#dhcp-range=1234::, ra-names</p> 
<p><br></p> 
<p># Do Router Advertisements, BUT NOT DHCP for this subnet.</p> 
<p># Set the lifetime to 46 hours.&nbsp;(Note: minimum lifetime is 2 hours.)</p> 
<p>#dhcp-range=1234::, ra-only, 48h</p> 
<p><br></p> 
<p># Do DHCP and Router Advertisements for this subnet. Set the A bit in the RA</p> 
<p># so that clients can use SLAAC addresses as well as DHCP ones.</p> 
<p>#dhcp-range=1234::2, 1234::500, slaac</p> 
<p><br></p> 
<p># Do Router Advertisements and stateless DHCP for this subnet. Clients will</p> 
<p># not get addresses from DHCP, but they will get other configuration information.</p> 
<p># They will use SLAAC for addresses.</p> 
<p>#dhcp-range=1234::, ra-stateless</p> 
<p><br></p> 
<p># Do stateless DHCP, SLAAC, and generate DNS names for SLAAC addresses</p> 
<p># from DHCPv4 leases.</p> 
<p>#dhcp-range=1234::, ra-stateless, ra-names</p> 
<p><br></p> 
<p># Do router advertisements for all subnets where we're doing DHCPv6</p> 
<p># Unless overriden by ra-stateless, ra-names, et al, the router </p> 
<p># advertisements will have the M and O bits set, so that the clients</p> 
<p># get addresses and configuration from DHCPv6, and the A bit reset, so the </p> 
<p># clients don't use SLAAC addresses.</p> 
<p>#enable-ra</p> 
<p><br></p> 
<p># Supply parameters for specified hosts using DHCP. There are lots</p> 
<p># of valid alternatives, so we will give examples of each. Note that</p> 
<p># IP addresses DO NOT have to be in the range given above, they just</p> 
<p># need to be on the same network. The order of the parameters in these</p> 
<p># do not matter, it's permissible to give name, address and MAC in any</p> 
<p># order.</p> 
<p><br></p> 
<p># Always allocate the host with Ethernet address 11:22:33:44:55:66</p> 
<p># The IP address 192.168.0.60</p> 
<p>#dhcp-host=11:22:33:44:55:66,192.168.0.60</p> 
<p><br></p> 
<p># Always set the name of the host with hardware address</p> 
<p># 11:22:33:44:55:66 to be "fred"</p> 
<p>#dhcp-host=11:22:33:44:55:66,fred</p> 
<p><br></p> 
<p># Always give the host with Ethernet address 11:22:33:44:55:66</p> 
<p># the name fred and IP address 192.168.0.60 and lease time 45 minutes</p> 
<p>#dhcp-host=11:22:33:44:55:66,fred,192.168.0.60,45m</p> 
<p><br></p> 
<p># Give a host with Ethernet address 11:22:33:44:55:66 or</p> 
<p># 12:34:56:78:90:12 the IP address 192.168.0.60. Dnsmasq will assume</p> 
<p># that these two Ethernet interfaces will never be in use at the same</p> 
<p># time, and give the IP address to the second, even if it is already</p> 
<p># in use by the first. Useful for laptops with wired and wireless</p> 
<p># addresses.</p> 
<p>#dhcp-host=11:22:33:44:55:66,12:34:56:78:90:12,192.168.0.60</p> 
<p><br></p> 
<p># Give the machine which says its name is "bert" IP address</p> 
<p># 192.168.0.70 and an infinite lease</p> 
<p>#dhcp-host=bert,192.168.0.70,infinite</p> 
<p><br></p> 
<p># Always give the host with client identifier 01:02:02:04</p> 
<p># the IP address 192.168.0.60</p> 
<p>#dhcp-host=id:01:02:02:04,192.168.0.60</p> 
<p><br></p> 
<p># Always give the Infiniband interface with hardware address</p> 
<p># 80:00:00:48:fe:80:00:00:00:00:00:00:f4:52:14:03:00:28:05:81 the</p> 
<p># ip address 192.168.0.61. The client id is derived from the prefix</p> 
<p># ff:00:00:00:00:00:02:00:00:02:c9:00 and the last 8 pairs of</p> 
<p># hex digits of the hardware address.</p> 
<p>#dhcp-host=id:ff:00:00:00:00:00:02:00:00:02:c9:00:f4:52:14:03:00:28:05:81,192.168.0.61</p> 
<p><br></p> 
<p># Always give the host with client identifier "marjorie"</p> 
<p># the IP address 192.168.0.60</p> 
<p>#dhcp-host=id:marjorie,192.168.0.60</p> 
<p><br></p> 
<p># Enable the address given for "judge" in /etc/hosts</p> 
<p># to be given to a machine presenting the name "judge" when</p> 
<p># it asks for a DHCP lease.</p> 
<p>#dhcp-host=judge</p> 
<p><br></p> 
<p># Never offer DHCP service to a machine whose Ethernet</p> 
<p># address is 11:22:33:44:55:66</p> 
<p>#dhcp-host=11:22:33:44:55:66,ignore</p> 
<p><br></p> 
<p># Ignore any client-id presented by the machine with Ethernet</p> 
<p># address 11:22:33:44:55:66. This is useful to prevent a machine</p> 
<p># being treated differently when running under different OS's or</p> 
<p># between PXE boot and OS boot.</p> 
<p>#dhcp-host=11:22:33:44:55:66,id:*</p> 
<p><br></p> 
<p># Send extra options which are tagged as "red" to</p> 
<p># the machine with Ethernet address 11:22:33:44:55:66</p> 
<p>#dhcp-host=11:22:33:44:55:66,set:red</p> 
<p><br></p> 
<p># Send extra options which are tagged as "red" to</p> 
<p># any machine with Ethernet address starting 11:22:33:</p> 
<p>#dhcp-host=11:22:33:*:*:*,set:red</p> 
<p><br></p> 
<p># Give a fixed IPv6 address and name to client with </p> 
<p># DUID 00:01:00:01:16:d2:83:fc:92:d4:19:e2:d8:b2</p> 
<p># Note the MAC addresses CANNOT be used to identify DHCPv6 clients.</p> 
<p># Note also the they [] around the IPv6 address are obilgatory.</p> 
<p>#dhcp-host=id:00:01:00:01:16:d2:83:fc:92:d4:19:e2:d8:b2, fred,&nbsp;[1234::5]&nbsp;</p> 
<p><br></p> 
<p># Ignore any clients which are not specified in dhcp-host lines</p> 
<p># or /etc/ethers. Equivalent to ISC "deny unknown-clients".</p> 
<p># This relies on the special "known" tag which is set when</p> 
<p># a host is matched.</p> 
<p>#dhcp-ignore=tag:!known</p> 
<p><br></p> 
<p># Send extra options which are tagged as "red" to any machine whose</p> 
<p># DHCP vendorclass string includes the substring "Linux"</p> 
<p>#dhcp-vendorclass=set:red,Linux</p> 
<p><br></p> 
<p># Send extra options which are tagged as "red" to any machine one</p> 
<p># of whose DHCP userclass strings includes the substring "accounts"</p> 
<p>#dhcp-userclass=set:red,accounts</p> 
<p><br></p> 
<p># Send extra options which are tagged as "red" to any machine whose</p> 
<p># MAC address matches the pattern.</p> 
<p>#dhcp-mac=set:red,00:60:8C:*:*:*</p> 
<p><br></p> 
<p># If this line is uncommented, dnsmasq will read /etc/ethers and act</p> 
<p># on the ethernet-address/IP pairs found there just as if they had</p> 
<p># been given as --dhcp-host options. Useful if you keep</p> 
<p># MAC-address/host mappings there for other purposes.</p> 
<p>#read-ethers</p> 
<p><br></p> 
<p># Send options to hosts which ask for a DHCP lease.</p> 
<p># See RFC 2132 for details of available options.</p> 
<p># Common options can be given to dnsmasq by name:</p> 
<p># run "dnsmasq&nbsp;--help dhcp" to get a list.</p> 
<p># Note that all the common settings, such as netmask and</p> 
<p># broadcast address, DNS server and default route, are given</p> 
<p># sane defaults by dnsmasq. You very likely will not need</p> 
<p># any dhcp-options. If you use Windows clients and Samba, there</p> 
<p># are some options which are recommended, they are detailed at the</p> 
<p># end of this section.</p> 
<p><br></p> 
<p># Override the default route supplied by dnsmasq, which assumes the</p> 
<p># router is the same machine as the one running dnsmasq.</p> 
<p>#dhcp-option=3,1.2.3.4</p> 
<p><br></p> 
<p># Do the same thing, but using the option name</p> 
<p>#dhcp-option=option:router,1.2.3.4</p> 
<p><br></p> 
<p># Override the default route supplied by dnsmasq and send no default</p> 
<p># route at all. Note that this only works for the options sent by</p> 
<p># default (1, 3, 6, 12, 28) the same line will send a zero-length option</p> 
<p># for all other option numbers.</p> 
<p>#dhcp-option=3</p> 
<p><br></p> 
<p># Set the NTP time server addresses to 192.168.0.4 and 10.10.0.5</p> 
<p>#dhcp-option=option:ntp-server,192.168.0.4,10.10.0.5</p> 
<p><br></p> 
<p># Send DHCPv6 option. Note [] around IPv6 addresses.</p> 
<p>#dhcp-option=option6:dns-server,[1234::77],[1234::88]</p> 
<p><br></p> 
<p># Send DHCPv6 option for namservers as the machine running </p> 
<p># dnsmasq and another.</p> 
<p>#dhcp-option=option6:dns-server,[::],[1234::88]</p> 
<p><br></p> 
<p># Ask client to poll for option changes every six hours.&nbsp;(RFC4242)</p> 
<p>#dhcp-option=option6:information-refresh-time,6h</p> 
<p><br></p> 
<p># Set option 58 client renewal time (T1). Defaults to half of the</p> 
<p># lease time if not specified.&nbsp;(RFC2132)</p> 
<p>#dhcp-option=option:T1:1m</p> 
<p><br></p> 
<p># Set option 59 rebinding time (T2). Defaults to 7/8 of the</p> 
<p># lease time if not specified.&nbsp;(RFC2132)</p> 
<p>#dhcp-option=option:T2:2m</p> 
<p><br></p> 
<p># Set the NTP time server address to be the same machine as</p> 
<p># is running dnsmasq</p> 
<p>#dhcp-option=42,0.0.0.0</p> 
<p><br></p> 
<p># Set the NIS domain name to "welly"</p> 
<p>#dhcp-option=40,welly</p> 
<p><br></p> 
<p># Set the default time-to-live to 50</p> 
<p>#dhcp-option=23,50</p> 
<p><br></p> 
<p># Set the "all subnets are local" flag</p> 
<p>#dhcp-option=27,1</p> 
<p><br></p> 
<p># Send the etherboot magic flag and then etherboot options (a string).</p> 
<p>#dhcp-option=128,e4:45:74:68:00:00</p> 
<p>#dhcp-option=129,NIC=eepro100</p> 
<p><br></p> 
<p># Specify an option which will only be sent to the "red" network</p> 
<p>#&nbsp;(see dhcp-range for the declaration of the "red" network)</p> 
<p># Note that the tag: part must precede the option: part.</p> 
<p>#dhcp-option = tag:red, option:ntp-server, 192.168.1.1</p> 
<p><br></p> 
<p># The following DHCP options set up dnsmasq in the same way as is specified</p> 
<p># for the ISC dhcpcd in</p> 
<p># https://www.samba.org/samba/ftp/docs/textdocs/DHCP-Server-Configuration.txt</p> 
<p># adapted for a typical dnsmasq installation where the host running</p> 
<p># dnsmasq is also the host running samba.</p> 
<p># you may want to uncomment some or all of them if you use</p> 
<p># Windows clients and Samba.</p> 
<p>#dhcp-option=19,0 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# option ip-forwarding off</p> 
<p>#dhcp-option=44,0.0.0.0 &nbsp;&nbsp;&nbsp;&nbsp;# set netbios-over-TCP/IP nameserver(s) aka WINS server(s)</p> 
<p>#dhcp-option=45,0.0.0.0 &nbsp;&nbsp;&nbsp;&nbsp;# netbios datagram distribution server</p> 
<p>#dhcp-option=46,8 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# netbios node type</p> 
<p><br></p> 
<p># Send an empty WPAD option. This may be REQUIRED to get windows 7 to behave.</p> 
<p>#dhcp-option=252,"\n"</p> 
<p><br></p> 
<p># Send RFC-3397 DNS domain search DHCP option. WARNING: Your DHCP client</p> 
<p># probably doesn't support this......</p> 
<p>#dhcp-option=option:domain-search,eng.apple.com,marketing.apple.com</p> 
<p><br></p> 
<p># Send RFC-3442 classless static routes (note the netmask encoding)</p> 
<p>#dhcp-option=121,192.168.1.0/24,1.2.3.4,10.0.0.0/8,5.6.7.8</p> 
<p><br></p> 
<p># Send vendor-class specific options encapsulated in DHCP option 43.</p> 
<p># The meaning of the options is defined by the vendor-class so</p> 
<p># options are sent only when the client supplied vendor class</p> 
<p># matches the class given here.&nbsp;(A substring match is OK, so "MSFT"</p> 
<p># matches "MSFT" and "MSFT 5.0"). This example sets the</p> 
<p># mtftp address to 0.0.0.0 for PXEClients.</p> 
<p>#dhcp-option=vendor:PXEClient,1,0.0.0.0</p> 
<p><br></p> 
<p># Send microsoft-specific option to tell windows to release the DHCP lease</p> 
<p># when it shuts down. Note the "i" flag, to tell dnsmasq to send the</p> 
<p># value as a four-byte integer - that's what microsoft wants. See</p> 
<p># https://technet2.microsoft.com/WindowsServer/en/library/a70f1bb7-d2d4-49f0-96d6-4b7414ecfaae1033.mspx?mfr=true</p> 
<p>#dhcp-option=vendor:MSFT,2,1i</p> 
<p><br></p> 
<p># Send the Encapsulated-vendor-class ID needed by some configurations of</p> 
<p># Etherboot to allow is to recognise the DHCP server.</p> 
<p>#dhcp-option=vendor:Etherboot,60,"Etherboot"</p> 
<p><br></p> 
<p># Send options to PXELinux. Note that we need to send the options even</p> 
<p># though they don't appear in the parameter request list, so we need</p> 
<p># to use dhcp-option-force here.</p> 
<p># See https://syslinux.zytor.com/pxe.php#special for details.</p> 
<p># Magic number - needed before anything else is recognised</p> 
<p>#dhcp-option-force=208,f1:00:74:7e</p> 
<p># Configuration file name</p> 
<p>#dhcp-option-force=209,configs/common</p> 
<p># Path prefix</p> 
<p>#dhcp-option-force=210,/tftpboot/pxelinux/files/</p> 
<p># Reboot time.&nbsp;(Note 'i' to send 32-bit value)</p> 
<p>#dhcp-option-force=211,30i</p> 
<p><br></p> 
<p># Set the boot filename for netboot/PXE. You will only need</p> 
<p># this is you want to boot machines over the network and you will need</p> 
<p># a TFTP server; either dnsmasq's built in TFTP server or an</p> 
<p># external one.&nbsp;(See below for how to enable the TFTP server.)</p> 
<p>#dhcp-boot=pxelinux.0</p> 
<p><br></p> 
<p># The same as above, but use custom tftp-server instead machine running dnsmasq</p> 
<p>#dhcp-boot=pxelinux,server.name,192.168.1.100</p> 
<p><br></p> 
<p># Boot for Etherboot gPXE. The idea is to send two different</p> 
<p># filenames, the first loads gPXE, and the second tells gPXE what to</p> 
<p># load. The dhcp-match sets the gpxe tag for requests from gPXE.</p> 
<p>#dhcp-match=set:gpxe,175 # gPXE sends a 175 option.</p> 
<p>#dhcp-boot=tag:!gpxe,undionly.kpxe</p> 
<p>#dhcp-boot=mybootimage</p> 
<p><br></p> 
<p>dhcp-match=set:efi-x86_64,option:client-arch,7</p> 
<p>dhcp-match=set:efi-x86_64,option:client-arch,9</p> 
<p>dhcp-match=set:efi-x86,option:client-arch,6</p> 
<p>dhcp-match=set:bios,option:client-arch,0</p> 
<p><br></p> 
<p>dhcp-boot=tag:efi-x86_64,shim.efi</p> 
<p>dhcp-boot=tag:efi-x86,"efi32/syslinux.efi"</p> 
<p>dhcp-boot=tag:bios,pxelinux.0</p> 
<p><br></p> 
<p>#dhcp-boot=images/pxeboot/vmlinuz</p> 
<p>#dhcp-boot=EFI/BOOT/grubx64.efi</p> 
<p><br></p> 
<p># Encapsulated options for Etherboot gPXE. All the options are</p> 
<p># encapsulated within option 175</p> 
<p>#dhcp-option=encap:175, 1, 5b &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# priority code</p> 
<p>#dhcp-option=encap:175, 176, 1b &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# no-proxydhcp</p> 
<p>#dhcp-option=encap:175, 177, string &nbsp;&nbsp;# bus-id</p> 
<p>#dhcp-option=encap:175, 189, 1b &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# BIOS drive code</p> 
<p>#dhcp-option=encap:175, 190, user &nbsp;&nbsp;&nbsp;&nbsp;# iSCSI username</p> 
<p>#dhcp-option=encap:175, 191, pass &nbsp;&nbsp;&nbsp;&nbsp;# iSCSI password</p> 
<p><br></p> 
<p># Test for the architecture of a netboot client. PXE clients are</p> 
<p># supposed to send their architecture as option 93.&nbsp;(See RFC 4578)</p> 
<p>#dhcp-match=peecees, option:client-arch, 0 #x86-32</p> 
<p>#dhcp-match=itanics, option:client-arch, 2 #IA64</p> 
<p>#dhcp-match=hammers, option:client-arch, 6 #x86-64</p> 
<p>#dhcp-match=mactels, option:client-arch, 7 #EFI x86-64</p> 
<p><br></p> 
<p># Do real PXE, rather than just booting a single file, this is an</p> 
<p># alternative to dhcp-boot.</p> 
<p>#pxe-prompt="What system shall I netboot?"</p> 
<p># or with timeout before first available action is taken:</p> 
<p>#pxe-prompt="Press F8 for menu.", 60</p> 
<p><br></p> 
<p># Available boot services. for PXE.</p> 
<p>#pxe-service=x86PC,&nbsp;"Boot from local disk"</p> 
<p><br></p> 
<p># Loads &lt;tftp-root&gt;/pxelinux.0 from dnsmasq TFTP server.</p> 
<p>#pxe-service=x86PC,&nbsp;"Install Linux", pxelinux</p> 
<p><br></p> 
<p># Loads &lt;tftp-root&gt;/pxelinux.0 from TFTP server at 1.2.3.4.</p> 
<p># Beware this fails on old PXE ROMS.</p> 
<p>#pxe-service=x86PC,&nbsp;"Install Linux", pxelinux, 1.2.3.4</p> 
<p><br></p> 
<p># Use bootserver on network, found my multicast or broadcast.</p> 
<p>#pxe-service=x86PC,&nbsp;"Install windows from RIS server", 1</p> 
<p><br></p> 
<p># Use bootserver at a known IP address.</p> 
<p>#pxe-service=x86PC,&nbsp;"Install windows from RIS server", 1, 1.2.3.4</p> 
<p><br></p> 
<p># If you have multicast-FTP available,</p> 
<p># information for that can be passed in a similar way using options 1</p> 
<p># to 5. See page 19 of</p> 
<p># https://download.intel.com/design/archives/wfm/downloads/pxespec.pdf</p> 
<p><br></p> 
<p>#pxe-service=x86PC,&nbsp;"Ipxe Boot On Legacy BIOS", ipxebios</p> 
<p>#pxe-service=IA32_EFI,&nbsp;"Ipxe Boot On X86 Uefi", ipxeuefix86</p> 
<p>#pxe-service=X86-64_EFI,&nbsp;"Ipxe Boot On X64 Uefi", ipxeuefix64</p> 
<p><br></p> 
<p># Enable dnsmasq's built-in TFTP server</p> 
<p>enable-tftp</p> 
<p><br></p> 
<p># Set the root directory for files available via FTP.</p> 
<p>tftp-root=/tftpboot</p> 
<p>#tftp-root=/var/ftp</p> 
<p>#tftp-root=/mnt/usb</p> 
<p><br></p> 
<p># Do not abort if the tftp-root is unavailable</p> 
<p>#tftp-no-fail</p> 
<p><br></p> 
<p># Make the TFTP server more secure: with this set, only files owned by</p> 
<p># the user dnsmasq is running as will be send over the net.</p> 
<p>#tftp-secure</p> 
<p><br></p> 
<p># This option stops dnsmasq from negotiating a larger blocksize for TFTP</p> 
<p># transfers. It will slow things down, but may rescue some broken TFTP</p> 
<p># clients.</p> 
<p>#tftp-no-blocksize</p> 
<p><br></p> 
<p># Set the boot file name only when the "red" tag is set.</p> 
<p>#dhcp-boot=tag:red,pxelinux.red-net</p> 
<p><br></p> 
<p># An example of dhcp-boot with an external TFTP server: the name and IP</p> 
<p># address of the server are given after the filename.</p> 
<p># Can fail with old PXE ROMS. Overridden by --pxe-service.</p> 
<p>#dhcp-boot=/var/ftpd/pxelinux.0,boothost,192.168.0.3</p> 
<p><br></p> 
<p># If there are multiple external tftp servers having a same name</p> 
<p>#&nbsp;(using /etc/hosts) then that name can be specified as the</p> 
<p># tftp_servername (the third option to dhcp-boot) and in that</p> 
<p># case dnsmasq resolves this name and returns the resultant IP</p> 
<p># addresses in round robin fasion. This facility can be used to</p> 
<p># load balance the tftp load among a set of servers.</p> 
<p>#dhcp-boot=/var/ftpd/pxelinux.0,boothost,tftp_server_name</p> 
<p><br></p> 
<p># Set the limit on DHCP leases, the default is 150</p> 
<p>#dhcp-lease-max=150</p> 
<p><br></p> 
<p># The DHCP server needs somewhere on disk to keep its lease database.</p> 
<p># This defaults to a sane location, but if you want to change it, use</p> 
<p># the line below.</p> 
<p>#dhcp-leasefile=/var/lib/dnsmasq/dnsmasq.leases</p> 
<p><br></p> 
<p># Set the DHCP server to authoritative mode. In this mode it will barge in</p> 
<p># and take over the lease for any client which broadcasts on the network,</p> 
<p># whether it has a record of the lease or not. This avoids long timeouts</p> 
<p># when a machine wakes up on a new network. DO NOT enable this if there's</p> 
<p># the slightest chance that you might end up accidentally configuring a DHCP</p> 
<p># server for your campus/company accidentally. The ISC server uses</p> 
<p># the same option, and this URL provides more information:</p> 
<p># https://www.isc.org/files/auth.html</p> 
<p>#dhcp-authoritative</p> 
<p><br></p> 
<p># Run an executable when a DHCP lease is created or destroyed.</p> 
<p># The arguments sent to the script are "add" or "del",</p> 
<p># then the MAC address, the IP address and finally the hostname</p> 
<p># if there is one.</p> 
<p>#dhcp-script=/bin/echo</p> 
<p><br></p> 
<p># Set the cachesize here.</p> 
<p>#cache-size=150</p> 
<p><br></p> 
<p># If you want to disable negative caching, uncomment this.</p> 
<p>#no-negcache</p> 
<p><br></p> 
<p># Normally responses which come from /etc/hosts and the DHCP lease</p> 
<p># file have Time-To-Live set as zero, which conventionally means</p> 
<p># do not cache further. If you are happy to trade lower load on the</p> 
<p># server for potentially stale date, you can set a time-to-live (in</p> 
<p># seconds) here.</p> 
<p>#local-ttl=</p> 
<p><br></p> 
<p># If you want dnsmasq to detect attempts by Verisign to send queries</p> 
<p># to unregistered .com and .net hosts to its sitefinder service and</p> 
<p># have dnsmasq instead return the correct NXDOMAIN response, uncomment</p> 
<p># this line. You can add similar lines to do the same for other</p> 
<p># registries which have implemented wildcard A records.</p> 
<p>#bogus-nxdomain=64.94.110.11</p> 
<p><br></p> 
<p># If you want to fix up DNS results from upstream servers, use the</p> 
<p># alias option. This only works for IPv4.</p> 
<p># This alias makes a result of 1.2.3.4 appear as 5.6.7.8</p> 
<p>#alias=1.2.3.4,5.6.7.8</p> 
<p># and this maps 1.2.3.x to 5.6.7.x</p> 
<p>#alias=1.2.3.0,5.6.7.0,255.255.255.0</p> 
<p># and this maps 192.168.0.10-&gt;192.168.0.40 to 10.0.0.10-&gt;10.0.0.40</p> 
<p>#alias=192.168.0.10-192.168.0.40,10.0.0.0,255.255.255.0</p> 
<p><br></p> 
<p># Change these lines if you want dnsmasq to serve MX records.</p> 
<p><br></p> 
<p># Return an MX record named "maildomain.com" with target</p> 
<p># servermachine.com and preference 50</p> 
<p>#mx-host=maildomain.com,servermachine.com,50</p> 
<p><br></p> 
<p># Set the default target for MX records created using the localmx option.</p> 
<p>#mx-target=servermachine.com</p> 
<p><br></p> 
<p># Return an MX record pointing to the mx-target for all local</p> 
<p># machines.</p> 
<p>#localmx</p> 
<p><br></p> 
<p># Return an MX record pointing to itself for all local machines.</p> 
<p>#selfmx</p> 
<p><br></p> 
<p># Change the following lines if you want dnsmasq to serve SRV</p> 
<p># records.&nbsp; These are useful if you want to serve ldap requests for</p> 
<p># Active Directory and other windows-originated DNS requests.</p> 
<p># See RFC 2782.</p> 
<p># You may add multiple srv-host lines.</p> 
<p># The fields are &lt;name&gt;,&lt;target&gt;,&lt;port&gt;,&lt;priority&gt;,&lt;weight&gt;</p> 
<p># If the domain part if missing from the name (so that is just has the</p> 
<p># service and protocol sections) then the domain given by the domain=</p> 
<p># config option is used.&nbsp;(Note that expand-hosts does not need to be</p> 
<p># set for this to work.)</p> 
<p><br></p> 
<p># A SRV record sending LDAP for the example.com domain to</p> 
<p># ldapserver.example.com port 389</p> 
<p>#srv-host=_ldap._tcp.example.com,ldapserver.example.com,389</p> 
<p><br></p> 
<p># A SRV record sending LDAP for the example.com domain to</p> 
<p># ldapserver.example.com port 389 (using domain=)</p> 
<p>#domain=example.com</p> 
<p>#srv-host=_ldap._tcp,ldapserver.example.com,389</p> 
<p><br></p> 
<p># Two SRV records for LDAP, each with different priorities</p> 
<p>#srv-host=_ldap._tcp.example.com,ldapserver.example.com,389,1</p> 
<p>#srv-host=_ldap._tcp.example.com,ldapserver.example.com,389,2</p> 
<p><br></p> 
<p># A SRV record indicating that there is no LDAP server for the domain</p> 
<p># example.com</p> 
<p>#srv-host=_ldap._tcp.example.com</p> 
<p><br></p> 
<p># The following line shows how to make dnsmasq serve an arbitrary PTR</p> 
<p># record. This is useful for DNS-SD.&nbsp;(Note that the</p> 
<p># domain-name expansion done for SRV records _does_not</p> 
<p># occur for PTR records.)</p> 
<p>#ptr-record=_http._tcp.dns-sd-services,"New Employee Page._http._tcp.dns-sd-services"</p> 
<p><br></p> 
<p># Change the following lines to enable dnsmasq to serve TXT records.</p> 
<p># These are used for things like SPF and zeroconf.&nbsp;(Note that the</p> 
<p># domain-name expansion done for SRV records _does_not</p> 
<p># occur for TXT records.)</p> 
<p><br></p> 
<p>#Example SPF.</p> 
<p>#txt-record=example.com,"v=spf1 a -all"</p> 
<p><br></p> 
<p>#Example zeroconf</p> 
<p>#txt-record=_http._tcp.example.com,name=value,paper=A4</p> 
<p><br></p> 
<p># Provide an alias for a "local" DNS name. Note that this _only_ works</p> 
<p># for targets which are names from DHCP or /etc/hosts. Give host</p> 
<p>#&nbsp;"bert" another name, bertrand</p> 
<p>#cname=bertand,bert</p> 
<p><br></p> 
<p># For debugging purposes, log each DNS query as it passes through</p> 
<p># dnsmasq.</p> 
<p>#log-queries</p> 
<p><br></p> 
<p># Log lots of extra information about DHCP transactions.</p> 
<p>#log-dhcp</p> 
<p><br></p> 
<p># Include another lot of configuration options.</p> 
<p>#conf-file=/etc/dnsmasq.more.conf</p> 
<p>#conf-dir=/etc/dnsmasq.d</p> 
<p><br></p> 
<p># Include all the files in a directory except those ending in .bak</p> 
<p>#conf-dir=/etc/dnsmasq.d,.bak</p> 
<p><br></p> 
<p># Include all files in a directory which end in .conf</p> 
<p>#conf-dir=/etc/dnsmasq.d/,*.conf</p> 
<p><br></p> 
<p># Include all files in /etc/dnsmasq.d except RPM backup files</p> 
<p>conf-dir=/etc/dnsmasq.d,.rpmnew,.rpmsave,.rpmorig</p> 
<p><br></p> 
<p><br></p> 
<p>6.最后是shim 调用grub2的配置文件。</p> 
<p>cat&nbsp;/tftpboot/EFI/fedora<br></p> 
<p><br></p> 
<p>function load_video {</p> 
<p>insmod efi_gop</p> 
<p>insmod efi_uga</p> 
<p>insmod video_bochs</p> 
<p>insmod video_cirrus</p> 
<p>insmod all_video</p> 
<p>}</p> 
<p><br></p> 
<p>load_video</p> 
<p>set gfxpayload=keep</p> 
<p>insmod gzio</p> 
<p><br></p> 
<p>menuentry 'Install Fedora 64-bit'&nbsp;&nbsp;--class fedora --class gnu-linux --class gnu --class os {</p> 
<p>linuxefi f26/vmlinuz ip=dhcp inst.repo=ftp://10.9.9.1/pub/LiveOS/</p> 
<p>initrdefi f26/initrd.img</p> 
<p>}</p> 
<p><br></p> 
<p>menuentry 'Rescue installed system'&nbsp;&nbsp;--class fedora --class gnu-linux --class gnu --class os {</p> 
<p>linuxefi f26/vmlinuz ip=dhcp root=live:ftp://10.9.9.1/pub/LiveOS/squashfs.img</p> 
<p>initrdefi f26/initrd.img</p> 
<p>}</p> 
<p><br></p>
													
												</div>